// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpyWire.Infrastructure;

namespace SpyWire.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210203131605_Migr2")]
    partial class Migr2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("SpyWire.Model.SpyWareItem", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerID");

                    b.HasIndex("TransID");

                    b.ToTable("SpyWareItems");
                });

            modelBuilder.Entity("SpyWire.Model.Transaction", b =>
                {
                    b.Property<string>("TransID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BuyerID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreditNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SellerID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("TransactionTime")
                        .HasColumnType("datetime2");

                    b.HasKey("TransID");

                    b.HasIndex("BuyerID");

                    b.HasIndex("SellerID");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("SpyWire.Model.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DateCreated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SpyWire.Model.SpyWareItem", b =>
                {
                    b.HasOne("SpyWire.Model.User", "Owner")
                        .WithMany("spyWares")
                        .HasForeignKey("OwnerID");

                    b.HasOne("SpyWire.Model.Transaction", "Trans")
                        .WithMany("SoldItems")
                        .HasForeignKey("TransID");

                    b.Navigation("Owner");

                    b.Navigation("Trans");
                });

            modelBuilder.Entity("SpyWire.Model.Transaction", b =>
                {
                    b.HasOne("SpyWire.Model.User", "Buyer")
                        .WithMany("Bought")
                        .HasForeignKey("BuyerID");

                    b.HasOne("SpyWire.Model.User", "Seller")
                        .WithMany("Sold")
                        .HasForeignKey("SellerID");

                    b.Navigation("Buyer");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("SpyWire.Model.Transaction", b =>
                {
                    b.Navigation("SoldItems");
                });

            modelBuilder.Entity("SpyWire.Model.User", b =>
                {
                    b.Navigation("Bought");

                    b.Navigation("Sold");

                    b.Navigation("spyWares");
                });
#pragma warning restore 612, 618
        }
    }
}
